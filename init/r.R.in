@VERSIONING@if (! is.na(Sys.getenv( "MODULE_VERSION", unset = NA ))) {
@VERSIONING@	Sys.setenv("MODULE_VERSION_STACK"="@VERSION@")
@VERSIONING@  Sys.setenv("MODULE_VERSION"="@VERSION@")
@VERSIONING@} else {
@VERSIONING@	Sys.setenv("MODULE_VERSION_STACK"=Sys.getenv("MODULE_VERSION"))
@VERSIONING@}

module <- function(...){
  arglist <- as.list(match.call())
  ## change this from 'module' to 'r'
  arglist[1] <- 'r'
  args <- paste0(arglist, collapse = ' ')

@VERSIONING@  exec_prefix <- paste0("@BASEPREFIX@/", Sys.getenv("MODULE_VERSION"), collapse = '')
@VERSIONING@  binary <- paste(exec_prefix, 'bin/modulecmd', sep = '/')

@NOTVERSIONING@  exec_prefix <- "@bindir@"
@NOTVERSIONING@  binary <- paste(exec_prefix, 'modulecmd', sep = '/')

  cmd <- paste(binary, args, sep = ' ')

  hndl <- pipe(cmd)
  eval(expr = parse(file = hndl))
  close(hndl)

  invisible(0)
}

if (is.na(Sys.getenv( "MODULEPATH", unset = NA ))) {
	dotfile <- file("@INITPATH@/.modulespath", "r")
  paths <- gsub("^\\s*", "", readLines(dotfile), perl=TRUE)
  paths <- gsub("[\\s#].*$", "", paths, perl=TRUE)
	modulepath <- paste0(paths[grepl("\\S", paths, perl=TRUE)], collapse=':')

	Sys.setenv("MODULEPATH"=modulepath)
  close(dotfile)
}

if (is.na(Sys.getenv( "LOADEDMODULES", unset = NA ))) {
	Sys.setenv("LOADEDMODULES"="");
}
